const uint8_t AvenirNextLTPro_Regular8pt7bBitmaps[] PROGMEM = {
  0x00, 0xFF, 0x30, 0xB6, 0xD0, 0x14, 0x14, 0x14, 0x14, 0x7F, 0x24, 0x24,
  0xFE, 0x24, 0x28, 0x28, 0x28, 0x10, 0x21, 0xF6, 0xB9, 0x12, 0x34, 0x38,
  0x1C, 0x2C, 0x48, 0x99, 0x6F, 0x84, 0x00, 0x78, 0xCC, 0xC8, 0x85, 0x08,
  0x50, 0xCE, 0x07, 0xA0, 0x05, 0xE0, 0x73, 0x0A, 0x10, 0xA1, 0x13, 0x33,
  0x1E, 0x3C, 0x19, 0x84, 0x21, 0x08, 0x64, 0x0E, 0x07, 0x8F, 0x32, 0x87,
  0x20, 0xCC, 0x79, 0xF3, 0xF0, 0x29, 0x69, 0x24, 0x92, 0x24, 0x48, 0x89,
  0x22, 0x49, 0x24, 0xA5, 0x20, 0x10, 0x23, 0xF0, 0x82, 0x88, 0x80, 0x08,
  0x08, 0x08, 0xFF, 0x08, 0x08, 0x08, 0x08, 0x6A, 0xE0, 0xC0, 0x04, 0x20,
  0x84, 0x10, 0x42, 0x08, 0x41, 0x04, 0x20, 0x38, 0x8B, 0x14, 0x18, 0x30,
  0x60, 0xC1, 0x83, 0x89, 0x11, 0xC0, 0x17, 0xD1, 0x11, 0x11, 0x11, 0x11,
  0x3C, 0x8F, 0x08, 0x10, 0x20, 0x82, 0x0C, 0x30, 0xC3, 0x07, 0xF0, 0x3C,
  0x8C, 0x08, 0x10, 0x63, 0x01, 0x01, 0x02, 0x85, 0x11, 0xC0, 0x0C, 0x0C,
  0x14, 0x14, 0x24, 0x64, 0x44, 0x84, 0xFF, 0x04, 0x04, 0x04, 0x7E, 0x81,
  0x02, 0x07, 0x80, 0x80, 0x81, 0x02, 0x05, 0x11, 0xC0, 0x08, 0x20, 0xC1,
  0x06, 0x0F, 0x31, 0x41, 0x83, 0x05, 0x11, 0xC0, 0xFE, 0x04, 0x10, 0x20,
  0xC1, 0x06, 0x08, 0x30, 0x40, 0x82, 0x00, 0x39, 0x8E, 0x0C, 0x1C, 0x67,
  0x11, 0x41, 0x83, 0x05, 0x11, 0xC0, 0x38, 0x8A, 0x0C, 0x18, 0x28, 0xDF,
  0x06, 0x08, 0x30, 0x41, 0x00, 0xC3, 0x50, 0x01, 0x68, 0x03, 0x0C, 0x30,
  0xC0, 0xC0, 0x30, 0x0C, 0x03, 0xFF, 0x00, 0x00, 0xFF, 0xC0, 0x30, 0x0C,
  0x03, 0x03, 0x0C, 0x30, 0xC0, 0x7A, 0x38, 0x41, 0x0C, 0x42, 0x08, 0x20,
  0x02, 0x08, 0x0F, 0x83, 0x06, 0x40, 0x24, 0xF9, 0x89, 0x99, 0x19, 0x91,
  0x19, 0x12, 0xCE, 0xC4, 0x02, 0x30, 0x61, 0xF8, 0x04, 0x01, 0xC0, 0x28,
  0x05, 0x01, 0x10, 0x22, 0x0C, 0x61, 0x04, 0x3F, 0x88, 0x09, 0x01, 0x60,
  0x30, 0xFD, 0x0E, 0x0C, 0x18, 0x5F, 0x21, 0xC1, 0x83, 0x06, 0x17, 0xC0,
  0x1F, 0x0C, 0x64, 0x03, 0x00, 0x80, 0x20, 0x08, 0x02, 0x00, 0xC0, 0x10,
  0x03, 0x08, 0x7C, 0xFC, 0x43, 0x20, 0x50, 0x38, 0x0C, 0x06, 0x03, 0x01,
  0x81, 0xC0, 0xA1, 0x9F, 0x80, 0xFF, 0x02, 0x04, 0x08, 0x1F, 0xA0, 0x40,
  0x81, 0x02, 0x07, 0xF0, 0xFF, 0x02, 0x04, 0x08, 0x1F, 0xA0, 0x40, 0x81,
  0x02, 0x04, 0x00, 0x1F, 0x0C, 0x34, 0x03, 0x00, 0x80, 0x20, 0x08, 0x3E,
  0x01, 0xC0, 0x50, 0x13, 0x04, 0x7E, 0x81, 0x81, 0x81, 0x81, 0x81, 0xFF,
  0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xFF, 0xF0, 0x04, 0x10, 0x41, 0x04,
  0x10, 0x41, 0x04, 0x1C, 0xDE, 0x82, 0x84, 0x88, 0x90, 0xA0, 0xC0, 0xA0,
  0x90, 0x88, 0x8C, 0x86, 0x83, 0x82, 0x08, 0x20, 0x82, 0x08, 0x20, 0x82,
  0x08, 0x3F, 0xC0, 0x78, 0x0F, 0x83, 0xD0, 0x5A, 0x0B, 0x22, 0x64, 0x4C,
  0xD9, 0x8A, 0x31, 0x46, 0x10, 0xC2, 0x10, 0xC0, 0xE0, 0x68, 0x36, 0x19,
  0x0C, 0xC6, 0x33, 0x09, 0x86, 0xC1, 0xE0, 0x70, 0x30, 0x1F, 0x04, 0x11,
  0x01, 0x60, 0x38, 0x03, 0x00, 0x60, 0x0C, 0x01, 0xC0, 0x68, 0x08, 0x82,
  0x0F, 0x80, 0xF9, 0x0A, 0x0C, 0x18, 0x30, 0xBE, 0x40, 0x81, 0x02, 0x04,
  0x00, 0x1F, 0x02, 0x08, 0x40, 0x4C, 0x06, 0x80, 0x28, 0x02, 0x80, 0x28,
  0x02, 0xC0, 0x64, 0x04, 0x20, 0x81, 0xFF, 0xFD, 0x0E, 0x0C, 0x18, 0x7F,
  0xA6, 0x44, 0x8D, 0x0A, 0x1C, 0x10, 0x3D, 0x8E, 0x04, 0x0C, 0x0E, 0x03,
  0x01, 0x02, 0x07, 0x1B, 0xC0, 0xFF, 0x84, 0x02, 0x01, 0x00, 0x80, 0x40,
  0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0x81, 0x81, 0x81, 0x81, 0x81,
  0x81, 0x81, 0x81, 0x81, 0x83, 0x42, 0x3C, 0x80, 0xD0, 0x24, 0x09, 0x04,
  0x21, 0x08, 0x43, 0x20, 0x48, 0x12, 0x07, 0x00, 0xC0, 0x30, 0xC1, 0x02,
  0x83, 0x0D, 0x0A, 0x12, 0x14, 0x26, 0x2C, 0x44, 0xC9, 0x89, 0x12, 0x12,
  0x24, 0x14, 0x68, 0x38, 0x60, 0x60, 0xC0, 0xC1, 0x80, 0x40, 0x88, 0x63,
  0x10, 0x48, 0x0E, 0x03, 0x00, 0xC0, 0x68, 0x13, 0x08, 0x46, 0x09, 0x03,
  0xC0, 0xA0, 0x98, 0xC4, 0x41, 0x40, 0xA0, 0x20, 0x10, 0x08, 0x04, 0x02,
  0x01, 0x00, 0xFF, 0x03, 0x02, 0x04, 0x0C, 0x08, 0x10, 0x30, 0x20, 0x40,
  0xC0, 0xFF, 0xF2, 0x49, 0x24, 0x92, 0x49, 0x38, 0x81, 0x04, 0x10, 0x20,
  0x81, 0x04, 0x10, 0x20, 0x83, 0xE4, 0x92, 0x49, 0x24, 0x92, 0x78, 0x08,
  0x18, 0x14, 0x24, 0x22, 0x42, 0x81, 0xFF, 0x89, 0x80, 0x78, 0x10, 0x5F,
  0xC6, 0x18, 0xDD, 0x80, 0x80, 0x80, 0x80, 0x80, 0xBC, 0xC2, 0x81, 0x81,
  0x81, 0x81, 0xC2, 0xBC, 0x3C, 0x8A, 0x04, 0x08, 0x10, 0x11, 0x1E, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x3D, 0x43, 0x81, 0x81, 0x81, 0x81, 0x43, 0x3D,
  0x3C, 0x8A, 0x0F, 0xF8, 0x10, 0x11, 0x9E, 0x19, 0x08, 0x42, 0x7C, 0x84,
  0x21, 0x08, 0x42, 0x00, 0x3D, 0x43, 0x81, 0x81, 0x81, 0x81, 0x43, 0x3D,
  0x01, 0x01, 0xC2, 0x7C, 0x82, 0x08, 0x20, 0x82, 0xEC, 0xE1, 0x86, 0x18,
  0x61, 0x84, 0x8F, 0xF0, 0x20, 0x02, 0x49, 0x24, 0x92, 0x4E, 0x82, 0x08,
  0x20, 0x82, 0x29, 0x28, 0xC2, 0x89, 0x26, 0x8C, 0xFF, 0xF8, 0xB9, 0xD9,
  0xCE, 0x10, 0xC2, 0x18, 0x43, 0x08, 0x61, 0x0C, 0x21, 0xBB, 0x38, 0x61,
  0x86, 0x18, 0x61, 0x3C, 0x42, 0x81, 0x81, 0x81, 0x81, 0x42, 0x3C, 0xBC,
  0xC2, 0x81, 0x81, 0x81, 0x81, 0xC2, 0xBC, 0x80, 0x80, 0x80, 0x80, 0x3D,
  0x43, 0x81, 0x81, 0x81, 0x81, 0x43, 0x3D, 0x01, 0x01, 0x01, 0x01, 0xBC,
  0x88, 0x88, 0x88, 0x74, 0x61, 0xC1, 0x86, 0x2E, 0x21, 0x3E, 0x42, 0x10,
  0x84, 0x20, 0xC0, 0x86, 0x18, 0x61, 0x86, 0x1C, 0xDD, 0xC2, 0x85, 0x11,
  0x22, 0x45, 0x06, 0x0C, 0x46, 0x28, 0xC5, 0x19, 0xB5, 0x22, 0x94, 0x52,
  0x8C, 0x60, 0x84, 0x46, 0xC8, 0xA0, 0xC1, 0x85, 0x99, 0x21, 0xC2, 0x85,
  0x11, 0x22, 0x45, 0x06, 0x0C, 0x10, 0x20, 0xC3, 0x00, 0xFC, 0x31, 0x84,
  0x21, 0x8C, 0x3F, 0x74, 0x44, 0x44, 0x48, 0x44, 0x44, 0x44, 0x70, 0xFF,
  0xFF, 0xE1, 0x08, 0x42, 0x10, 0x83, 0x21, 0x08, 0x42, 0x13, 0x80, 0x71,
  0x0E };

const GFXglyph AvenirNextLTPro_Regular8pt7bGlyphs[] PROGMEM = {
  {     0,   1,   1,   4,    0,    0 },   // 0x20 ' '
  {     1,   1,  12,   5,    2,  -11 },   // 0x21 '!'
  {     3,   3,   4,   7,    2,  -11 },   // 0x22 '"'
  {     5,   8,  12,  10,    1,  -11 },   // 0x23 '#'
  {    17,   7,  15,   9,    1,  -13 },   // 0x24 '$'
  {    31,  12,  12,  14,    1,  -11 },   // 0x25 '%'
  {    49,  10,  12,  12,    1,  -11 },   // 0x26 '&'
  {    64,   1,   4,   5,    2,  -11 },   // 0x27 '''
  {    65,   3,  15,   5,    1,  -11 },   // 0x28 '('
  {    71,   3,  15,   5,    1,  -11 },   // 0x29 ')'
  {    77,   7,   6,   7,    0,  -11 },   // 0x2A '*'
  {    83,   8,   8,  10,    1,   -8 },   // 0x2B '+'
  {    91,   2,   4,   4,    1,   -1 },   // 0x2C ','
  {    92,   3,   1,   5,    1,   -4 },   // 0x2D '-'
  {    93,   1,   2,   3,    1,   -1 },   // 0x2E '.'
  {    94,   6,  12,   6,    0,  -11 },   // 0x2F '/'
  {   103,   7,  12,   9,    1,  -11 },   // 0x30 '0'
  {   114,   4,  12,   9,    1,  -11 },   // 0x31 '1'
  {   120,   7,  12,   9,    1,  -11 },   // 0x32 '2'
  {   131,   7,  12,   9,    0,  -11 },   // 0x33 '3'
  {   142,   8,  12,   9,    1,  -11 },   // 0x34 '4'
  {   154,   7,  12,   9,    1,  -11 },   // 0x35 '5'
  {   165,   7,  12,   9,    1,  -11 },   // 0x36 '6'
  {   176,   7,  12,   9,    1,  -11 },   // 0x37 '7'
  {   187,   7,  12,   9,    1,  -11 },   // 0x38 '8'
  {   198,   7,  12,   9,    1,  -11 },   // 0x39 '9'
  {   209,   1,   8,   4,    1,   -7 },   // 0x3A ':'
  {   210,   2,  11,   4,    0,   -7 },   // 0x3B ';'
  {   213,   8,   8,  10,    1,   -8 },   // 0x3C '<'
  {   221,   8,   4,  10,    1,   -6 },   // 0x3D '='
  {   225,   8,   8,  10,    1,   -8 },   // 0x3E '>'
  {   233,   6,  12,   8,    1,  -11 },   // 0x3F '?'
  {   242,  12,  12,  14,    1,  -11 },   // 0x40 '@'
  {   260,  11,  12,  11,    0,  -11 },   // 0x41 'A'
  {   277,   7,  12,   9,    1,  -11 },   // 0x42 'B'
  {   288,  10,  12,  11,    1,  -11 },   // 0x43 'C'
  {   303,   9,  12,  11,    1,  -11 },   // 0x44 'D'
  {   317,   7,  12,   9,    1,  -11 },   // 0x45 'E'
  {   328,   7,  12,   8,    1,  -11 },   // 0x46 'F'
  {   339,  10,  12,  12,    1,  -11 },   // 0x47 'G'
  {   354,   8,  12,  10,    1,  -11 },   // 0x48 'H'
  {   366,   1,  12,   3,    1,  -11 },   // 0x49 'I'
  {   368,   6,  12,   7,    0,  -11 },   // 0x4A 'J'
  {   377,   8,  12,   9,    1,  -11 },   // 0x4B 'K'
  {   389,   6,  12,   7,    1,  -11 },   // 0x4C 'L'
  {   398,  11,  12,  13,    1,  -11 },   // 0x4D 'M'
  {   415,   9,  12,  11,    1,  -11 },   // 0x4E 'N'
  {   429,  11,  12,  13,    1,  -11 },   // 0x4F 'O'
  {   446,   7,  12,   9,    1,  -11 },   // 0x50 'P'
  {   457,  12,  12,  14,    1,  -11 },   // 0x51 'Q'
  {   475,   7,  12,   9,    1,  -11 },   // 0x52 'R'
  {   486,   7,  12,   9,    1,  -11 },   // 0x53 'S'
  {   497,   9,  12,  11,    1,  -11 },   // 0x54 'T'
  {   511,   8,  12,  10,    1,  -11 },   // 0x55 'U'
  {   523,  10,  12,  10,    0,  -11 },   // 0x56 'V'
  {   538,  15,  12,  15,    0,  -11 },   // 0x57 'W'
  {   561,  10,  12,  10,    0,  -11 },   // 0x58 'X'
  {   576,   9,  12,   9,    0,  -11 },   // 0x59 'Y'
  {   590,   8,  12,  10,    1,  -11 },   // 0x5A 'Z'
  {   602,   3,  15,   5,    1,  -11 },   // 0x5B '['
  {   608,   6,  12,   6,    0,  -11 },   // 0x5C '\'
  {   617,   3,  15,   5,    1,  -11 },   // 0x5D ']'
  {   623,   8,   7,  10,    1,  -11 },   // 0x5E '^'
  {   630,   8,   1,   8,    0,    2 },   // 0x5F '_'
  {   631,   3,   3,   4,    0,  -11 },   // 0x60 '`'
  {   633,   6,   8,   8,    1,   -7 },   // 0x61 'a'
  {   639,   8,  13,  10,    1,  -12 },   // 0x62 'b'
  {   652,   7,   8,   8,    1,   -7 },   // 0x63 'c'
  {   659,   8,  13,  10,    1,  -12 },   // 0x64 'd'
  {   672,   7,   8,   9,    1,   -7 },   // 0x65 'e'
  {   679,   5,  13,   5,    0,  -12 },   // 0x66 'f'
  {   688,   8,  12,  10,    1,   -7 },   // 0x67 'g'
  {   700,   6,  13,   8,    1,  -12 },   // 0x68 'h'
  {   710,   1,  12,   3,    1,  -11 },   // 0x69 'i'
  {   712,   3,  16,   3,   -1,  -11 },   // 0x6A 'j'
  {   718,   6,  13,   8,    1,  -12 },   // 0x6B 'k'
  {   728,   1,  13,   3,    1,  -12 },   // 0x6C 'l'
  {   730,  11,   8,  13,    1,   -7 },   // 0x6D 'm'
  {   741,   6,   8,   8,    1,   -7 },   // 0x6E 'n'
  {   747,   8,   8,  10,    1,   -7 },   // 0x6F 'o'
  {   755,   8,  12,  10,    1,   -7 },   // 0x70 'p'
  {   767,   8,  12,  10,    1,   -7 },   // 0x71 'q'
  {   779,   4,   8,   5,    1,   -7 },   // 0x72 'r'
  {   783,   5,   8,   7,    1,   -7 },   // 0x73 's'
  {   788,   5,  10,   5,    0,   -9 },   // 0x74 't'
  {   795,   6,   8,   8,    1,   -7 },   // 0x75 'u'
  {   801,   7,   8,   8,    0,   -7 },   // 0x76 'v'
  {   808,  11,   8,  12,    0,   -7 },   // 0x77 'w'
  {   819,   7,   8,   8,    0,   -7 },   // 0x78 'x'
  {   826,   7,  12,   8,    0,   -7 },   // 0x79 'y'
  {   837,   6,   8,   8,    1,   -7 },   // 0x7A 'z'
  {   843,   4,  15,   4,    0,  -11 },   // 0x7B '{'
  {   851,   1,  16,   3,    1,  -11 },   // 0x7C '|'
  {   853,   5,  15,   5,    0,  -11 },   // 0x7D '}'
  {   863,   8,   2,  10,    1,   -5 } }; // 0x7E '~'

const GFXfont AvenirNextLTPro_Regular8pt7b PROGMEM = {
  (uint8_t  *)AvenirNextLTPro_Regular8pt7bBitmaps,
  (GFXglyph *)AvenirNextLTPro_Regular8pt7bGlyphs,
  0x20, 0x7E, 19 };

// Approx. 1537 bytes
